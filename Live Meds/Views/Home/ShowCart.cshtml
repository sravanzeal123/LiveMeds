@model IEnumerable<LiveMedsEntity.Item>

@{
    Layout = null;
    ViewBag.Title = "ShowCart";
}

<div class="container">
    <div class="row">
        <div class="col-lg-12 ">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <strong>Shopping Cart</strong>
                </div>
                <div class="panel-body">
                    <table class="table table-responsive table-striped table-hover" id="cart">
                        <tr class="active">
                            <th>Name</th>
                            <th>Quantity</th>
                            <th>Total</th>
                            <th>Details</th>
                            <th>Delete</th>
                        </tr>

                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => item.Name)</h4>
                                </td>
                                <td>

                                    <input type="hidden" class="item-price" value="@item.ProductSellingPrice">
                                    <input type="hidden" class="item-id" value="@item.ProductId">
                                    <input type="number"  min="1" pattern="^[0-9]" class="item" value="@item.ItemCount">

                                </td>
                                <td>
                                    <input type="number"  class="item-total" value="@item.Total" readonly>

                                    @*@Html.DisplayFor(modelItem => item.Total)*@
                                </td>
                                <td>

                                    @Html.ActionLink("Details", "Details", new { id = item.ProductId }, new { @class = "btn btn-md btn-info" })
                                   
                                </td>
                                <td>@Html.ActionLink("Delete", "Remove", new { id = item.ProductId }, new { @class = "btn btn-md btn-danger" })</td>
                            </tr>
                        }

                    </table>
                </div>
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">
    updateCartTotal();
</script>

<div class="form-inline col-lg-6 col-lg-offset-4">
    <br />
    <br />
    <h4> Total</h4> <input type="number" class="form-control input-lg"  value="0" id="total-cost" readonly>
    @if (Model.Count() != 0)
    {
        <a class="btn btn-lg btn-success" href="/Home/CheckOut">Check Out</a>
    }
</div>
<div class="clearfix"></div>
    


    <script type="text/javascript">
        window.onload = function () {
            updateCartTotal();
        }
        var elements = document.querySelectorAll('.item');
        for (var i = 0; i < elements.length; i++) {
            elements[i].addEventListener('change', function (e) {

                var parent = this.closest('tr');
                var price = parent.querySelector('.item-price').value;
                var id = parent.querySelector('.item-id').value;
                var qty = this.value;

                var total = price * qty;
                parent.querySelector('.item-total').value = total;
                //alert('/Home/UpdateCart/' + id + '/' + qty);
                $.ajax({

                    url: '/Home/UpdateCart/' + id + '/' + qty,
                    type: 'GET',
                    success: function (data, status) {


                    }
                });
                updateCartTotal();

            }, false);

            elements[i].addEventListener('keyup', function (e) {

                var parent = this.closest('tr');
                var price = parent.querySelector('.item-price').value;
                var qty = this.value;

                var total = price * qty;
                parent.querySelector('.item-total').value = total;
                updateCartTotal();
            }, false);
        }
        function updateSession() {

        }
        function updateCartTotal() {
            var netTotal = 0;
            var subTotal = document.querySelectorAll('#cart tr .item-total');

            for (var i = 0; i < subTotal.length; i++) {
                if (parseFloat(subTotal[i].value)) {
                    netTotal += parseFloat(subTotal[i].value);
                }
            }

            document.querySelector('#total-cost').value = netTotal;

        }
    </script>


    <style>
        .btn-info {
            background-color: #3399cc;
        }

        .item-total {
            width: 100%;
            padding: 8px 10px;
            display: inline-block;
            border: 1px solid #ccc;
            font-size: medium;
            border-radius: 4px;
            box-sizing: border-box;
        }

        .item {
            width: 100%;
            padding: 8px 10px;
            display: inline-block;
            border: 1px solid #ccc;
            font-size: medium;
            border-radius: 4px;
            box-sizing: border-box;
        }

        .input-lg {
            width: 100px;
        }

    </style>
